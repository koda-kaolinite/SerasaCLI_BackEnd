# http://editorconfig.org
root = true

# -------------------- Global Rules --------------------
[*]
# Trims trailing whitespace on save.
trim_trailing_whitespace = true

# Inserts a final new line at the end of the file.
insert_final_newline = true

# -------------------- F# (FSharp) --------------------
[*.fs]
# Defines the maximum line length.
max_line_length = 150

# Aligns infix and pipeline operators at the start of the line.
fsharp_multiline_infix_or_pipeline_at_start_of_line = true
fsharp_pipe_line_breaks = after_arrow

# -------------------- Markdown (MD) --------------------
[*.md]
# Defines the maximum line length and enables word wrap.
max_line_length = 140
word_wrap = true

# -------------------- C# (Csharp) --------------------
[*.cs]

## Space and New Line Preferences
# Ensures spaces around binary operators.
csharp_space_around_binary_operators = before_and_after

# Removes spaces before commas, dots, and parentheses.
csharp_space_after_cast = false
csharp_space_after_dot = false
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_between_parentheses = false

# Controls spacing in method calls and declarations.
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false

# Ensures spaces after control flow keywords and commas.
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_comma = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_declaration_statements = false
csharp_space_before_semicolon_in_for_statement = false

# New line before open brace.
csharp_new_line_before_open_brace = all

# New line between query expression clauses (LINQ).
csharp_new_line_between_query_expression_clauses = true

# Controls spaces around colons in inheritance.
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_before_colon_in_inheritance_clause = true

## Indentation Preferences
# Indents statement labels one less than the current level.
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

## Code Style Preferences
# Prefers parentheses for clarity in binary expressions.
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Avoids using the `var` keyword.
csharp_style_var_elsewhere = false
csharp_style_var_for_built_in_types = false
csharp_style_var_when_type_is_apparent = false

# Prefers using "pattern matching" over other approaches.
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Prefers conditional delegate calls.
csharp_style_conditional_delegate_call = true

# Prefers static local function members and `readonly struct`.
csharp_prefer_static_local_function = true
csharp_style_prefer_readonly_struct = true
csharp_style_prefer_readonly_struct_member = true

# Prefers braces, simplified `using`, primary constructors, and `method group`.
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = true
csharp_style_prefer_primary_constructors = true

# Prefers modern expressions and operators.
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_tuple_swap = true

# Prefers `using` directives outside the namespace.
csharp_using_directive_placement = outside_namespace

# -------------------- Naming Rules --------------------

# Naming rules
dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = error
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Naming styles
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# Symbol specifications
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
